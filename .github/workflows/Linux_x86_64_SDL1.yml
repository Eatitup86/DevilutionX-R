---
name: Linux x64 SDL1

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Build Environment
        run: |
          apt-get update
          apt-get install -y \
            cmake \
            file \
            g++ \
            git \
            libfmt-dev \
            libsdl1.2-dev \
            libsodium-dev \
            libpng-dev \
            libbz2-dev \
            rpm \
            smpq

      - name: Cache CMake build folder
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ github.workflow }}-v2-${{ github.sha }}
          restore-keys: ${{ github.workflow }}-v2-

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}
        # Disable LTO to work around an ICE in gcc11
        run: |
          cmake \
            -S . \
            -B build \
            -D CMAKE_BUILD_TYPE=RelWithDebInfo \
            -D BUILD_TESTING=OFF \
            -D CPACK=ON \
            -D USE_SDL1=ON \
            -D DISCORD_INTEGRATION=ON \
            -D DISABLE_LTO=ON

      - name: Build
        working-directory: ${{github.workspace}}
        shell: bash
        run: cmake --build build -j $(nproc) --target package

      - name: Package
        run: Packaging/nix/LinuxReleasePackaging.sh

      - name: Upload-Package
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: devilutionx_linux_x86_64_SDL1.tar.xz
          path: devilutionx.tar.xz

      - name: Clean up artifacts
        run: rm -rf build/_CPack_Packages build/package build/*.deb build/*.rpm build/*.appimage build/*.tar.xz
...
