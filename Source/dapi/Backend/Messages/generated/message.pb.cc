// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: message.proto
// Protobuf C++ Version: 5.29.3

#include "message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dapi {
namespace message {

inline constexpr EndofQueue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EndofQueue::EndofQueue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EndofQueueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndofQueueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndofQueueDefaultTypeInternal() {}
  union {
    EndofQueue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndofQueueDefaultTypeInternal _EndofQueue_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace message
}  // namespace dapi
namespace dapi {
namespace message {
// ===================================================================

class EndofQueue::_Internal {
 public:
};

EndofQueue::EndofQueue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapi.message.EndofQueue)
}
EndofQueue::EndofQueue(
    ::google::protobuf::Arena* arena, const EndofQueue& from)
    : EndofQueue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EndofQueue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EndofQueue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EndofQueue::~EndofQueue() {
  // @@protoc_insertion_point(destructor:dapi.message.EndofQueue)
  SharedDtor(*this);
}
inline void EndofQueue::SharedDtor(MessageLite& self) {
  EndofQueue& this_ = static_cast<EndofQueue&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EndofQueue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EndofQueue(arena);
}
constexpr auto EndofQueue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EndofQueue),
                                            alignof(EndofQueue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<24> EndofQueue::_class_data_ = {
    {
        &_EndofQueue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EndofQueue::MergeImpl,
        ::google::protobuf::MessageLite::GetNewImpl<EndofQueue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EndofQueue::SharedDtor,
        ::google::protobuf::MessageLite::GetClearImpl<EndofQueue>(), &EndofQueue::ByteSizeLong,
            &EndofQueue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EndofQueue, _impl_._cached_size_),
        true,
    },
    "dapi.message.EndofQueue",
};
const ::google::protobuf::internal::ClassData* EndofQueue::GetClassData() const {
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> EndofQueue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dapi::message::EndofQueue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EndofQueue::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.message.EndofQueue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EndofQueue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EndofQueue& this_ = static_cast<const EndofQueue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EndofQueue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EndofQueue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dapi.message.EndofQueue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target = stream->WriteRaw(
                this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
                static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dapi.message.EndofQueue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EndofQueue::ByteSizeLong(const MessageLite& base) {
          const EndofQueue& this_ = static_cast<const EndofQueue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EndofQueue::ByteSizeLong() const {
          const EndofQueue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dapi.message.EndofQueue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
          }
          this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
          return total_size;
        }

void EndofQueue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EndofQueue*>(&to_msg);
  auto& from = static_cast<const EndofQueue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dapi.message.EndofQueue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void EndofQueue::CopyFrom(const EndofQueue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.message.EndofQueue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EndofQueue::InternalSwap(EndofQueue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

// ===================================================================

class Message::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dapi::message::Message, _impl_._oneof_case_);
};

void Message::set_allocated_initbroadcast(::dapi::init::ClientBroadcast* initbroadcast) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (initbroadcast) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(initbroadcast)->GetArena();
    if (message_arena != submessage_arena) {
      initbroadcast = ::google::protobuf::internal::GetOwnedMessage(message_arena, initbroadcast, submessage_arena);
    }
    set_has_initbroadcast();
    _impl_.msg_.initbroadcast_ = initbroadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:dapi.message.Message.initBroadcast)
}
void Message::clear_initbroadcast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kInitBroadcast) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.initbroadcast_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      if (_impl_.msg_.initbroadcast_ != nullptr) {
        _impl_.msg_.initbroadcast_->Clear();
      }
    }
    clear_has_msg();
  }
}
void Message::set_allocated_initresponse(::dapi::init::ServerResponse* initresponse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (initresponse) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(initresponse)->GetArena();
    if (message_arena != submessage_arena) {
      initresponse = ::google::protobuf::internal::GetOwnedMessage(message_arena, initresponse, submessage_arena);
    }
    set_has_initresponse();
    _impl_.msg_.initresponse_ = initresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:dapi.message.Message.initResponse)
}
void Message::clear_initresponse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kInitResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.initresponse_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      if (_impl_.msg_.initresponse_ != nullptr) {
        _impl_.msg_.initresponse_->Clear();
      }
    }
    clear_has_msg();
  }
}
void Message::set_allocated_frameupdate(::dapi::game::FrameUpdate* frameupdate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (frameupdate) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(frameupdate)->GetArena();
    if (message_arena != submessage_arena) {
      frameupdate = ::google::protobuf::internal::GetOwnedMessage(message_arena, frameupdate, submessage_arena);
    }
    set_has_frameupdate();
    _impl_.msg_.frameupdate_ = frameupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:dapi.message.Message.frameUpdate)
}
void Message::clear_frameupdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kFrameUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.frameupdate_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      if (_impl_.msg_.frameupdate_ != nullptr) {
        _impl_.msg_.frameupdate_->Clear();
      }
    }
    clear_has_msg();
  }
}
void Message::set_allocated_command(::dapi::commands::Command* command) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (command) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(command)->GetArena();
    if (message_arena != submessage_arena) {
      command = ::google::protobuf::internal::GetOwnedMessage(message_arena, command, submessage_arena);
    }
    set_has_command();
    _impl_.msg_.command_ = command;
  }
  // @@protoc_insertion_point(field_set_allocated:dapi.message.Message.command)
}
void Message::clear_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kCommand) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.command_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      if (_impl_.msg_.command_ != nullptr) {
        _impl_.msg_.command_->Clear();
      }
    }
    clear_has_msg();
  }
}
void Message::set_allocated_endofqueue(::dapi::message::EndofQueue* endofqueue) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (endofqueue) {
    ::google::protobuf::Arena* submessage_arena = endofqueue->GetArena();
    if (message_arena != submessage_arena) {
      endofqueue = ::google::protobuf::internal::GetOwnedMessage(message_arena, endofqueue, submessage_arena);
    }
    set_has_endofqueue();
    _impl_.msg_.endofqueue_ = endofqueue;
  }
  // @@protoc_insertion_point(field_set_allocated:dapi.message.Message.endOfQueue)
}
Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapi.message.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dapi::message::Message& from_msg)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kInitBroadcast:
        _impl_.msg_.initbroadcast_ = ::google::protobuf::MessageLite::CopyConstruct<::dapi::init::ClientBroadcast>(arena, *from._impl_.msg_.initbroadcast_);
        break;
      case kInitResponse:
        _impl_.msg_.initresponse_ = ::google::protobuf::MessageLite::CopyConstruct<::dapi::init::ServerResponse>(arena, *from._impl_.msg_.initresponse_);
        break;
      case kFrameUpdate:
        _impl_.msg_.frameupdate_ = ::google::protobuf::MessageLite::CopyConstruct<::dapi::game::FrameUpdate>(arena, *from._impl_.msg_.frameupdate_);
        break;
      case kCommand:
        _impl_.msg_.command_ = ::google::protobuf::MessageLite::CopyConstruct<::dapi::commands::Command>(arena, *from._impl_.msg_.command_);
        break;
      case kEndOfQueue:
        _impl_.msg_.endofqueue_ = ::google::protobuf::MessageLite::CopyConstruct<::dapi::message::EndofQueue>(arena, *from._impl_.msg_.endofqueue_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dapi.message.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:dapi.message.Message)
  SharedDtor(*this);
}
inline void Message::SharedDtor(MessageLite& self) {
  Message& this_ = static_cast<Message&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_msg()) {
    this_.clear_msg();
  }
  this_._impl_.~Impl_();
}

void Message::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:dapi.message.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (msg_case()) {
    case kInitBroadcast: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.initbroadcast_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.msg_.initbroadcast_ != nullptr) {
          _impl_.msg_.initbroadcast_->Clear();
        }
      }
      break;
    }
    case kInitResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.initresponse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.msg_.initresponse_ != nullptr) {
          _impl_.msg_.initresponse_->Clear();
        }
      }
      break;
    }
    case kFrameUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.frameupdate_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.msg_.frameupdate_ != nullptr) {
          _impl_.msg_.frameupdate_->Clear();
        }
      }
      break;
    }
    case kCommand: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.command_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.msg_.command_ != nullptr) {
          _impl_.msg_.command_->Clear();
        }
      }
      break;
    }
    case kEndOfQueue: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.endofqueue_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.msg_.endofqueue_ != nullptr) {
          _impl_.msg_.endofqueue_->Clear();
        }
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


inline void* Message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Message(arena);
}
constexpr auto Message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Message),
                                            alignof(Message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<21> Message::_class_data_ = {
    {
        &_Message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Message::MergeImpl,
        ::google::protobuf::MessageLite::GetNewImpl<Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Message::SharedDtor,
        ::google::protobuf::MessageLite::GetClearImpl<Message>(), &Message::ByteSizeLong,
            &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
        true,
    },
    "dapi.message.Message",
};
const ::google::protobuf::internal::ClassData* Message::GetClassData() const {
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dapi::message::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dapi.init.ClientBroadcast initBroadcast = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.msg_.initbroadcast_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dapi.init.ServerResponse initResponse = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.msg_.initresponse_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dapi.game.FrameUpdate frameUpdate = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.msg_.frameupdate_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dapi.commands.Command command = 4;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.msg_.command_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dapi.message.EndofQueue endOfQueue = 5;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.msg_.endofqueue_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dapi::init::ClientBroadcast>()},
    {::_pbi::TcParser::GetTable<::dapi::init::ServerResponse>()},
    {::_pbi::TcParser::GetTable<::dapi::game::FrameUpdate>()},
    {::_pbi::TcParser::GetTable<::dapi::commands::Command>()},
    {::_pbi::TcParser::GetTable<::dapi::message::EndofQueue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.message.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dapi.message.Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.msg_case()) {
            case kInitBroadcast: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.msg_.initbroadcast_, this_._impl_.msg_.initbroadcast_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInitResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.msg_.initresponse_, this_._impl_.msg_.initresponse_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFrameUpdate: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.msg_.frameupdate_, this_._impl_.msg_.frameupdate_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCommand: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.msg_.command_, this_._impl_.msg_.command_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEndOfQueue: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.msg_.endofqueue_, this_._impl_.msg_.endofqueue_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target = stream->WriteRaw(
                this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
                static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dapi.message.Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dapi.message.Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.msg_case()) {
            // .dapi.init.ClientBroadcast initBroadcast = 1;
            case kInitBroadcast: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_.initbroadcast_);
              break;
            }
            // .dapi.init.ServerResponse initResponse = 2;
            case kInitResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_.initresponse_);
              break;
            }
            // .dapi.game.FrameUpdate frameUpdate = 3;
            case kFrameUpdate: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_.frameupdate_);
              break;
            }
            // .dapi.commands.Command command = 4;
            case kCommand: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_.command_);
              break;
            }
            // .dapi.message.EndofQueue endOfQueue = 5;
            case kEndOfQueue: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_.endofqueue_);
              break;
            }
            case MSG_NOT_SET: {
              break;
            }
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
          }
          this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
          return total_size;
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dapi.message.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_msg();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kInitBroadcast: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.initbroadcast_ =
              ::google::protobuf::MessageLite::CopyConstruct<::dapi::init::ClientBroadcast>(arena, *from._impl_.msg_.initbroadcast_);
        } else {
          _this->_impl_.msg_.initbroadcast_->MergeFrom(from._internal_initbroadcast());
        }
        break;
      }
      case kInitResponse: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.initresponse_ =
              ::google::protobuf::MessageLite::CopyConstruct<::dapi::init::ServerResponse>(arena, *from._impl_.msg_.initresponse_);
        } else {
          _this->_impl_.msg_.initresponse_->MergeFrom(from._internal_initresponse());
        }
        break;
      }
      case kFrameUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.frameupdate_ =
              ::google::protobuf::MessageLite::CopyConstruct<::dapi::game::FrameUpdate>(arena, *from._impl_.msg_.frameupdate_);
        } else {
          _this->_impl_.msg_.frameupdate_->MergeFrom(from._internal_frameupdate());
        }
        break;
      }
      case kCommand: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.command_ =
              ::google::protobuf::MessageLite::CopyConstruct<::dapi::commands::Command>(arena, *from._impl_.msg_.command_);
        } else {
          _this->_impl_.msg_.command_->MergeFrom(from._internal_command());
        }
        break;
      }
      case kEndOfQueue: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.endofqueue_ =
              ::google::protobuf::MessageLite::CopyConstruct<::dapi::message::EndofQueue>(arena, *from._impl_.msg_.endofqueue_);
        } else {
          _this->_impl_.msg_.endofqueue_->MergeFrom(from._internal_endofqueue());
        }
        break;
      }
      case MSG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.message.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace dapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
