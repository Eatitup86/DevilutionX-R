// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: game.proto
// Protobuf C++ Version: 5.29.3

#include "game.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dapi {
namespace game {

inline constexpr FrameUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dpiece_{},
        playerdata_{},
        itemdata_{},
        grounditemid_{},
        _grounditemid_cached_byte_size_{0},
        townerdata_{},
        storeoption_{},
        _storeoption_cached_byte_size_{0},
        storeitems_{},
        _storeitems_cached_byte_size_{0},
        triggerdata_{},
        monsterdata_{},
        objectdata_{},
        missiledata_{},
        portaldata_{},
        questdata_{},
        qtext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{0u},
        stextflag_{0},
        pausemode_{0},
        cursor_{0u},
        menuopen_{false},
        chrflag_{false},
        invflag_{false},
        qtextflag_{false},
        currlevel_{0u},
        setlevel_{false},
        fps_{0u},
        gamemode_{0u},
        gndifficulty_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FrameUpdate::FrameUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrameUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameUpdateDefaultTypeInternal() {}
  union {
    FrameUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameUpdateDefaultTypeInternal _FrameUpdate_default_instance_;
}  // namespace game
}  // namespace dapi
namespace dapi {
namespace game {
// ===================================================================

class FrameUpdate::_Internal {
 public:
};

void FrameUpdate::clear_dpiece() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dpiece_.Clear();
}
void FrameUpdate::clear_playerdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerdata_.Clear();
}
void FrameUpdate::clear_itemdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.itemdata_.Clear();
}
void FrameUpdate::clear_townerdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.townerdata_.Clear();
}
void FrameUpdate::clear_triggerdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.triggerdata_.Clear();
}
void FrameUpdate::clear_monsterdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monsterdata_.Clear();
}
void FrameUpdate::clear_objectdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.objectdata_.Clear();
}
void FrameUpdate::clear_missiledata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.missiledata_.Clear();
}
void FrameUpdate::clear_portaldata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.portaldata_.Clear();
}
void FrameUpdate::clear_questdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.questdata_.Clear();
}
FrameUpdate::FrameUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dapi.game.FrameUpdate)
}
inline PROTOBUF_NDEBUG_INLINE FrameUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dapi::game::FrameUpdate& from_msg)
      : dpiece_{visibility, arena, from.dpiece_},
        playerdata_{visibility, arena, from.playerdata_},
        itemdata_{visibility, arena, from.itemdata_},
        grounditemid_{visibility, arena, from.grounditemid_},
        _grounditemid_cached_byte_size_{0},
        townerdata_{visibility, arena, from.townerdata_},
        storeoption_{visibility, arena, from.storeoption_},
        _storeoption_cached_byte_size_{0},
        storeitems_{visibility, arena, from.storeitems_},
        _storeitems_cached_byte_size_{0},
        triggerdata_{visibility, arena, from.triggerdata_},
        monsterdata_{visibility, arena, from.monsterdata_},
        objectdata_{visibility, arena, from.objectdata_},
        missiledata_{visibility, arena, from.missiledata_},
        portaldata_{visibility, arena, from.portaldata_},
        questdata_{visibility, arena, from.questdata_},
        qtext_(arena, from.qtext_),
        _cached_size_{0} {}

FrameUpdate::FrameUpdate(
    ::google::protobuf::Arena* arena,
    const FrameUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrameUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_),
           offsetof(Impl_, gndifficulty_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::gndifficulty_));

  // @@protoc_insertion_point(copy_constructor:dapi.game.FrameUpdate)
}
inline PROTOBUF_NDEBUG_INLINE FrameUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dpiece_{visibility, arena},
        playerdata_{visibility, arena},
        itemdata_{visibility, arena},
        grounditemid_{visibility, arena},
        _grounditemid_cached_byte_size_{0},
        townerdata_{visibility, arena},
        storeoption_{visibility, arena},
        _storeoption_cached_byte_size_{0},
        storeitems_{visibility, arena},
        _storeitems_cached_byte_size_{0},
        triggerdata_{visibility, arena},
        monsterdata_{visibility, arena},
        objectdata_{visibility, arena},
        missiledata_{visibility, arena},
        portaldata_{visibility, arena},
        questdata_{visibility, arena},
        qtext_(arena),
        _cached_size_{0} {}

inline void FrameUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, gndifficulty_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::gndifficulty_));
}
FrameUpdate::~FrameUpdate() {
  // @@protoc_insertion_point(destructor:dapi.game.FrameUpdate)
  SharedDtor(*this);
}
inline void FrameUpdate::SharedDtor(MessageLite& self) {
  FrameUpdate& this_ = static_cast<FrameUpdate&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.qtext_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FrameUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FrameUpdate(arena);
}
constexpr auto FrameUpdate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.dpiece_) +
          decltype(FrameUpdate::_impl_.dpiece_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.playerdata_) +
          decltype(FrameUpdate::_impl_.playerdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.itemdata_) +
          decltype(FrameUpdate::_impl_.itemdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.grounditemid_) +
          decltype(FrameUpdate::_impl_.grounditemid_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.townerdata_) +
          decltype(FrameUpdate::_impl_.townerdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.storeoption_) +
          decltype(FrameUpdate::_impl_.storeoption_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.storeitems_) +
          decltype(FrameUpdate::_impl_.storeitems_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.triggerdata_) +
          decltype(FrameUpdate::_impl_.triggerdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.monsterdata_) +
          decltype(FrameUpdate::_impl_.monsterdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.objectdata_) +
          decltype(FrameUpdate::_impl_.objectdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.missiledata_) +
          decltype(FrameUpdate::_impl_.missiledata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.portaldata_) +
          decltype(FrameUpdate::_impl_.portaldata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.questdata_) +
          decltype(FrameUpdate::_impl_.questdata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FrameUpdate), alignof(FrameUpdate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FrameUpdate::PlacementNew_,
                                 sizeof(FrameUpdate),
                                 alignof(FrameUpdate));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<22> FrameUpdate::_class_data_ = {
    {
        &_FrameUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FrameUpdate::MergeImpl,
        ::google::protobuf::MessageLite::GetNewImpl<FrameUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FrameUpdate::SharedDtor,
        ::google::protobuf::MessageLite::GetClearImpl<FrameUpdate>(), &FrameUpdate::ByteSizeLong,
            &FrameUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_._cached_size_),
        true,
    },
    "dapi.game.FrameUpdate",
};
const ::google::protobuf::internal::ClassData* FrameUpdate::GetClassData() const {
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 10, 59, 2> FrameUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160749568,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dapi::game::FrameUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.player_)}},
    // sint32 stextflag = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.stextflag_)}},
    // sint32 pauseMode = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.pausemode_)}},
    // bool menuOpen = 4;
    {::_pbi::TcParser::FastV8S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.menuopen_)}},
    // uint32 cursor = 5;
    {::_pbi::TcParser::FastV32S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.cursor_)}},
    // bool chrflag = 6;
    {::_pbi::TcParser::FastV8S1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.chrflag_)}},
    // bool invflag = 7;
    {::_pbi::TcParser::FastV8S1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.invflag_)}},
    // bool qtextflag = 8;
    {::_pbi::TcParser::FastV8S1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.qtextflag_)}},
    // string qtext = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.qtext_)}},
    // uint32 currlevel = 10;
    {::_pbi::TcParser::FastV32S1,
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.currlevel_)}},
    // bool setlevel = 11;
    {::_pbi::TcParser::FastV8S1,
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.setlevel_)}},
    // uint32 fps = 12;
    {::_pbi::TcParser::FastV32S1,
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.fps_)}},
    // uint32 gameMode = 13;
    {::_pbi::TcParser::FastV32S1,
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.gamemode_)}},
    // uint32 gnDifficulty = 14;
    {::_pbi::TcParser::FastV32S1,
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.gndifficulty_)}},
    // repeated .dapi.data.TileData dPiece = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.dpiece_)}},
    // repeated .dapi.data.PlayerData playerData = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 1, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.playerdata_)}},
    // repeated .dapi.data.ItemData itemData = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 2, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.itemdata_)}},
    // repeated uint32 groundItemID = 18;
    {::_pbi::TcParser::FastV32P2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.grounditemid_)}},
    // repeated .dapi.data.TownerData townerData = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 3, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.townerdata_)}},
    // repeated uint32 storeOption = 20;
    {::_pbi::TcParser::FastV32P2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.storeoption_)}},
    // repeated uint32 storeItems = 21;
    {::_pbi::TcParser::FastV32P2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.storeitems_)}},
    // repeated .dapi.data.TriggerData triggerData = 22;
    {::_pbi::TcParser::FastMtR2,
     {434, 63, 4, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.triggerdata_)}},
    // repeated .dapi.data.MonsterData monsterData = 23;
    {::_pbi::TcParser::FastMtR2,
     {442, 63, 5, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.monsterdata_)}},
    // repeated .dapi.data.ObjectData objectData = 24;
    {::_pbi::TcParser::FastMtR2,
     {450, 63, 6, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.objectdata_)}},
    // repeated .dapi.data.MissileData missileData = 25;
    {::_pbi::TcParser::FastMtR2,
     {458, 63, 7, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.missiledata_)}},
    // repeated .dapi.data.PortalData portalData = 26;
    {::_pbi::TcParser::FastMtR2,
     {466, 63, 8, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.portaldata_)}},
    // repeated .dapi.data.QuestData questData = 27;
    {::_pbi::TcParser::FastMtR2,
     {474, 63, 9, PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.questdata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player = 1;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.player_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // sint32 stextflag = 2;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.stextflag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 pauseMode = 3;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.pausemode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // bool menuOpen = 4;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.menuopen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 cursor = 5;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.cursor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool chrflag = 6;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.chrflag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool invflag = 7;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.invflag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool qtextflag = 8;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.qtextflag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string qtext = 9;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.qtext_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 currlevel = 10;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.currlevel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool setlevel = 11;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.setlevel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 fps = 12;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.fps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gameMode = 13;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.gamemode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gnDifficulty = 14;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.gndifficulty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .dapi.data.TileData dPiece = 15;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.dpiece_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.PlayerData playerData = 16;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.playerdata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.ItemData itemData = 17;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.itemdata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 groundItemID = 18;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.grounditemid_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated .dapi.data.TownerData townerData = 19;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.townerdata_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 storeOption = 20;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.storeoption_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 storeItems = 21;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.storeitems_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated .dapi.data.TriggerData triggerData = 22;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.triggerdata_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.MonsterData monsterData = 23;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.monsterdata_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.ObjectData objectData = 24;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.objectdata_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.MissileData missileData = 25;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.missiledata_), 0, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.PortalData portalData = 26;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.portaldata_), 0, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dapi.data.QuestData questData = 27;
    {PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.questdata_), 0, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dapi::data::TileData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::PlayerData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::ItemData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::TownerData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::TriggerData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::MonsterData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::ObjectData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::MissileData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::PortalData>()},
    {::_pbi::TcParser::GetTable<::dapi::data::QuestData>()},
  }}, {{
    "\25\0\0\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "dapi.game.FrameUpdate"
    "qtext"
  }},
};

PROTOBUF_NOINLINE void FrameUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.game.FrameUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dpiece_.Clear();
  _impl_.playerdata_.Clear();
  _impl_.itemdata_.Clear();
  _impl_.grounditemid_.Clear();
  _impl_.townerdata_.Clear();
  _impl_.storeoption_.Clear();
  _impl_.storeitems_.Clear();
  _impl_.triggerdata_.Clear();
  _impl_.monsterdata_.Clear();
  _impl_.objectdata_.Clear();
  _impl_.missiledata_.Clear();
  _impl_.portaldata_.Clear();
  _impl_.questdata_.Clear();
  _impl_.qtext_.ClearToEmpty();
  ::memset(&_impl_.player_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gndifficulty_) -
      reinterpret_cast<char*>(&_impl_.player_)) + sizeof(_impl_.gndifficulty_));
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FrameUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FrameUpdate& this_ = static_cast<const FrameUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FrameUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FrameUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dapi.game.FrameUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 player = 1;
          if (this_._internal_player() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_player(), target);
          }

          // sint32 stextflag = 2;
          if (this_._internal_stextflag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                2, this_._internal_stextflag(), target);
          }

          // sint32 pauseMode = 3;
          if (this_._internal_pausemode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                3, this_._internal_pausemode(), target);
          }

          // bool menuOpen = 4;
          if (this_._internal_menuopen() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_menuopen(), target);
          }

          // uint32 cursor = 5;
          if (this_._internal_cursor() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_cursor(), target);
          }

          // bool chrflag = 6;
          if (this_._internal_chrflag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_chrflag(), target);
          }

          // bool invflag = 7;
          if (this_._internal_invflag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_invflag(), target);
          }

          // bool qtextflag = 8;
          if (this_._internal_qtextflag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_qtextflag(), target);
          }

          // string qtext = 9;
          if (!this_._internal_qtext().empty()) {
            const std::string& _s = this_._internal_qtext();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dapi.game.FrameUpdate.qtext");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // uint32 currlevel = 10;
          if (this_._internal_currlevel() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                10, this_._internal_currlevel(), target);
          }

          // bool setlevel = 11;
          if (this_._internal_setlevel() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_setlevel(), target);
          }

          // uint32 fps = 12;
          if (this_._internal_fps() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_fps(), target);
          }

          // uint32 gameMode = 13;
          if (this_._internal_gamemode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                13, this_._internal_gamemode(), target);
          }

          // uint32 gnDifficulty = 14;
          if (this_._internal_gndifficulty() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                14, this_._internal_gndifficulty(), target);
          }

          // repeated .dapi.data.TileData dPiece = 15;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_dpiece_size());
               i < n; i++) {
            const auto& repfield = this_._internal_dpiece().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    15, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.PlayerData playerData = 16;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_playerdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_playerdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    16, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.ItemData itemData = 17;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_itemdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_itemdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    17, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated uint32 groundItemID = 18;
          {
            int byte_size = this_._impl_._grounditemid_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  18, this_._internal_grounditemid(), byte_size, target);
            }
          }

          // repeated .dapi.data.TownerData townerData = 19;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_townerdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_townerdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    19, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated uint32 storeOption = 20;
          {
            int byte_size = this_._impl_._storeoption_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  20, this_._internal_storeoption(), byte_size, target);
            }
          }

          // repeated uint32 storeItems = 21;
          {
            int byte_size = this_._impl_._storeitems_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  21, this_._internal_storeitems(), byte_size, target);
            }
          }

          // repeated .dapi.data.TriggerData triggerData = 22;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_triggerdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_triggerdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    22, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.MonsterData monsterData = 23;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_monsterdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_monsterdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    23, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.ObjectData objectData = 24;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_objectdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_objectdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    24, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.MissileData missileData = 25;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_missiledata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_missiledata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    25, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.PortalData portalData = 26;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_portaldata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_portaldata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    26, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .dapi.data.QuestData questData = 27;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_questdata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_questdata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    27, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target = stream->WriteRaw(
                this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
                static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dapi.game.FrameUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FrameUpdate::ByteSizeLong(const MessageLite& base) {
          const FrameUpdate& this_ = static_cast<const FrameUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FrameUpdate::ByteSizeLong() const {
          const FrameUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dapi.game.FrameUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .dapi.data.TileData dPiece = 15;
            {
              total_size += 1UL * this_._internal_dpiece_size();
              for (const auto& msg : this_._internal_dpiece()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.PlayerData playerData = 16;
            {
              total_size += 2UL * this_._internal_playerdata_size();
              for (const auto& msg : this_._internal_playerdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.ItemData itemData = 17;
            {
              total_size += 2UL * this_._internal_itemdata_size();
              for (const auto& msg : this_._internal_itemdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated uint32 groundItemID = 18;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_grounditemid(), 2,
                      this_._impl_._grounditemid_cached_byte_size_);
            }
            // repeated .dapi.data.TownerData townerData = 19;
            {
              total_size += 2UL * this_._internal_townerdata_size();
              for (const auto& msg : this_._internal_townerdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated uint32 storeOption = 20;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_storeoption(), 2,
                      this_._impl_._storeoption_cached_byte_size_);
            }
            // repeated uint32 storeItems = 21;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_storeitems(), 2,
                      this_._impl_._storeitems_cached_byte_size_);
            }
            // repeated .dapi.data.TriggerData triggerData = 22;
            {
              total_size += 2UL * this_._internal_triggerdata_size();
              for (const auto& msg : this_._internal_triggerdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.MonsterData monsterData = 23;
            {
              total_size += 2UL * this_._internal_monsterdata_size();
              for (const auto& msg : this_._internal_monsterdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.ObjectData objectData = 24;
            {
              total_size += 2UL * this_._internal_objectdata_size();
              for (const auto& msg : this_._internal_objectdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.MissileData missileData = 25;
            {
              total_size += 2UL * this_._internal_missiledata_size();
              for (const auto& msg : this_._internal_missiledata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.PortalData portalData = 26;
            {
              total_size += 2UL * this_._internal_portaldata_size();
              for (const auto& msg : this_._internal_portaldata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .dapi.data.QuestData questData = 27;
            {
              total_size += 2UL * this_._internal_questdata_size();
              for (const auto& msg : this_._internal_questdata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string qtext = 9;
            if (!this_._internal_qtext().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_qtext());
            }
            // uint32 player = 1;
            if (this_._internal_player() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_player());
            }
            // sint32 stextflag = 2;
            if (this_._internal_stextflag() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_stextflag());
            }
            // sint32 pauseMode = 3;
            if (this_._internal_pausemode() != 0) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_pausemode());
            }
            // uint32 cursor = 5;
            if (this_._internal_cursor() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_cursor());
            }
            // bool menuOpen = 4;
            if (this_._internal_menuopen() != 0) {
              total_size += 2;
            }
            // bool chrflag = 6;
            if (this_._internal_chrflag() != 0) {
              total_size += 2;
            }
            // bool invflag = 7;
            if (this_._internal_invflag() != 0) {
              total_size += 2;
            }
            // bool qtextflag = 8;
            if (this_._internal_qtextflag() != 0) {
              total_size += 2;
            }
            // uint32 currlevel = 10;
            if (this_._internal_currlevel() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currlevel());
            }
            // bool setlevel = 11;
            if (this_._internal_setlevel() != 0) {
              total_size += 2;
            }
            // uint32 fps = 12;
            if (this_._internal_fps() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_fps());
            }
            // uint32 gameMode = 13;
            if (this_._internal_gamemode() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gamemode());
            }
            // uint32 gnDifficulty = 14;
            if (this_._internal_gndifficulty() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gndifficulty());
            }
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
          }
          this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
          return total_size;
        }

void FrameUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrameUpdate*>(&to_msg);
  auto& from = static_cast<const FrameUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dapi.game.FrameUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dpiece()->MergeFrom(
      from._internal_dpiece());
  _this->_internal_mutable_playerdata()->MergeFrom(
      from._internal_playerdata());
  _this->_internal_mutable_itemdata()->MergeFrom(
      from._internal_itemdata());
  _this->_internal_mutable_grounditemid()->MergeFrom(from._internal_grounditemid());
  _this->_internal_mutable_townerdata()->MergeFrom(
      from._internal_townerdata());
  _this->_internal_mutable_storeoption()->MergeFrom(from._internal_storeoption());
  _this->_internal_mutable_storeitems()->MergeFrom(from._internal_storeitems());
  _this->_internal_mutable_triggerdata()->MergeFrom(
      from._internal_triggerdata());
  _this->_internal_mutable_monsterdata()->MergeFrom(
      from._internal_monsterdata());
  _this->_internal_mutable_objectdata()->MergeFrom(
      from._internal_objectdata());
  _this->_internal_mutable_missiledata()->MergeFrom(
      from._internal_missiledata());
  _this->_internal_mutable_portaldata()->MergeFrom(
      from._internal_portaldata());
  _this->_internal_mutable_questdata()->MergeFrom(
      from._internal_questdata());
  if (!from._internal_qtext().empty()) {
    _this->_internal_set_qtext(from._internal_qtext());
  }
  if (from._internal_player() != 0) {
    _this->_impl_.player_ = from._impl_.player_;
  }
  if (from._internal_stextflag() != 0) {
    _this->_impl_.stextflag_ = from._impl_.stextflag_;
  }
  if (from._internal_pausemode() != 0) {
    _this->_impl_.pausemode_ = from._impl_.pausemode_;
  }
  if (from._internal_cursor() != 0) {
    _this->_impl_.cursor_ = from._impl_.cursor_;
  }
  if (from._internal_menuopen() != 0) {
    _this->_impl_.menuopen_ = from._impl_.menuopen_;
  }
  if (from._internal_chrflag() != 0) {
    _this->_impl_.chrflag_ = from._impl_.chrflag_;
  }
  if (from._internal_invflag() != 0) {
    _this->_impl_.invflag_ = from._impl_.invflag_;
  }
  if (from._internal_qtextflag() != 0) {
    _this->_impl_.qtextflag_ = from._impl_.qtextflag_;
  }
  if (from._internal_currlevel() != 0) {
    _this->_impl_.currlevel_ = from._impl_.currlevel_;
  }
  if (from._internal_setlevel() != 0) {
    _this->_impl_.setlevel_ = from._impl_.setlevel_;
  }
  if (from._internal_fps() != 0) {
    _this->_impl_.fps_ = from._impl_.fps_;
  }
  if (from._internal_gamemode() != 0) {
    _this->_impl_.gamemode_ = from._impl_.gamemode_;
  }
  if (from._internal_gndifficulty() != 0) {
    _this->_impl_.gndifficulty_ = from._impl_.gndifficulty_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void FrameUpdate::CopyFrom(const FrameUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.game.FrameUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrameUpdate::InternalSwap(FrameUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dpiece_.InternalSwap(&other->_impl_.dpiece_);
  _impl_.playerdata_.InternalSwap(&other->_impl_.playerdata_);
  _impl_.itemdata_.InternalSwap(&other->_impl_.itemdata_);
  _impl_.grounditemid_.InternalSwap(&other->_impl_.grounditemid_);
  _impl_.townerdata_.InternalSwap(&other->_impl_.townerdata_);
  _impl_.storeoption_.InternalSwap(&other->_impl_.storeoption_);
  _impl_.storeitems_.InternalSwap(&other->_impl_.storeitems_);
  _impl_.triggerdata_.InternalSwap(&other->_impl_.triggerdata_);
  _impl_.monsterdata_.InternalSwap(&other->_impl_.monsterdata_);
  _impl_.objectdata_.InternalSwap(&other->_impl_.objectdata_);
  _impl_.missiledata_.InternalSwap(&other->_impl_.missiledata_);
  _impl_.portaldata_.InternalSwap(&other->_impl_.portaldata_);
  _impl_.questdata_.InternalSwap(&other->_impl_.questdata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.qtext_, &other->_impl_.qtext_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.gndifficulty_)
      + sizeof(FrameUpdate::_impl_.gndifficulty_)
      - PROTOBUF_FIELD_OFFSET(FrameUpdate, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace game
}  // namespace dapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
