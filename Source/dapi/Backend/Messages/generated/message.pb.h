// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: message.proto
// Protobuf C++ Version: 5.29.3

#ifndef message_2eproto_2epb_2eh
#define message_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "init.pb.h"
#include "game.pb.h"
#include "command.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::uint32_t offsets[];
};
namespace dapi {
namespace message {
class EndofQueue;
struct EndofQueueDefaultTypeInternal;
extern EndofQueueDefaultTypeInternal _EndofQueue_default_instance_;
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace message
}  // namespace dapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace dapi {
namespace message {

// ===================================================================


// -------------------------------------------------------------------

class EndofQueue final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:dapi.message.EndofQueue) */ {
 public:
  inline EndofQueue() : EndofQueue(nullptr) {}
  ~EndofQueue() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EndofQueue* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EndofQueue));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EndofQueue(
      ::google::protobuf::internal::ConstantInitialized);

  inline EndofQueue(const EndofQueue& from) : EndofQueue(nullptr, from) {}
  inline EndofQueue(EndofQueue&& from) noexcept
      : EndofQueue(nullptr, std::move(from)) {}
  inline EndofQueue& operator=(const EndofQueue& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndofQueue& operator=(EndofQueue&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const EndofQueue& default_instance() {
    return *internal_default_instance();
  }
  static inline const EndofQueue* internal_default_instance() {
    return reinterpret_cast<const EndofQueue*>(
        &_EndofQueue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EndofQueue& a, EndofQueue& b) { a.Swap(&b); }
  inline void Swap(EndofQueue* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndofQueue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndofQueue* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::MessageLite::DefaultConstruct<EndofQueue>(arena);
  }
  void CopyFrom(const EndofQueue& from);
  void MergeFrom(const EndofQueue& from) { EndofQueue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EndofQueue* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "dapi.message.EndofQueue"; }

 protected:
  explicit EndofQueue(::google::protobuf::Arena* arena);
  EndofQueue(::google::protobuf::Arena* arena, const EndofQueue& from);
  EndofQueue(::google::protobuf::Arena* arena, EndofQueue&& from) noexcept
      : EndofQueue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataLite<24> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:dapi.message.EndofQueue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EndofQueue& from_msg);
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class Message final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:dapi.message.Message) */ {
 public:
  inline Message() : Message(nullptr) {}
  ~Message() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Message* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Message));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message(const Message& from) : Message(nullptr, from) {}
  inline Message(Message&& from) noexcept
      : Message(nullptr, std::move(from)) {}
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const Message& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kInitBroadcast = 1,
    kInitResponse = 2,
    kFrameUpdate = 3,
    kCommand = 4,
    kEndOfQueue = 5,
    MSG_NOT_SET = 0,
  };
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
        &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Message& a, Message& b) { a.Swap(&b); }
  inline void Swap(Message* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::MessageLite::DefaultConstruct<Message>(arena);
  }
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from) { Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Message* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "dapi.message.Message"; }

 protected:
  explicit Message(::google::protobuf::Arena* arena);
  Message(::google::protobuf::Arena* arena, const Message& from);
  Message(::google::protobuf::Arena* arena, Message&& from) noexcept
      : Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataLite<21> _class_data_;

 public:
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInitBroadcastFieldNumber = 1,
    kInitResponseFieldNumber = 2,
    kFrameUpdateFieldNumber = 3,
    kCommandFieldNumber = 4,
    kEndOfQueueFieldNumber = 5,
  };
  // .dapi.init.ClientBroadcast initBroadcast = 1;
  bool has_initbroadcast() const;
  private:
  bool _internal_has_initbroadcast() const;

  public:
  void clear_initbroadcast() ;
  const ::dapi::init::ClientBroadcast& initbroadcast() const;
  PROTOBUF_NODISCARD ::dapi::init::ClientBroadcast* release_initbroadcast();
  ::dapi::init::ClientBroadcast* mutable_initbroadcast();
  void set_allocated_initbroadcast(::dapi::init::ClientBroadcast* value);
  void unsafe_arena_set_allocated_initbroadcast(::dapi::init::ClientBroadcast* value);
  ::dapi::init::ClientBroadcast* unsafe_arena_release_initbroadcast();

  private:
  const ::dapi::init::ClientBroadcast& _internal_initbroadcast() const;
  ::dapi::init::ClientBroadcast* _internal_mutable_initbroadcast();

  public:
  // .dapi.init.ServerResponse initResponse = 2;
  bool has_initresponse() const;
  private:
  bool _internal_has_initresponse() const;

  public:
  void clear_initresponse() ;
  const ::dapi::init::ServerResponse& initresponse() const;
  PROTOBUF_NODISCARD ::dapi::init::ServerResponse* release_initresponse();
  ::dapi::init::ServerResponse* mutable_initresponse();
  void set_allocated_initresponse(::dapi::init::ServerResponse* value);
  void unsafe_arena_set_allocated_initresponse(::dapi::init::ServerResponse* value);
  ::dapi::init::ServerResponse* unsafe_arena_release_initresponse();

  private:
  const ::dapi::init::ServerResponse& _internal_initresponse() const;
  ::dapi::init::ServerResponse* _internal_mutable_initresponse();

  public:
  // .dapi.game.FrameUpdate frameUpdate = 3;
  bool has_frameupdate() const;
  private:
  bool _internal_has_frameupdate() const;

  public:
  void clear_frameupdate() ;
  const ::dapi::game::FrameUpdate& frameupdate() const;
  PROTOBUF_NODISCARD ::dapi::game::FrameUpdate* release_frameupdate();
  ::dapi::game::FrameUpdate* mutable_frameupdate();
  void set_allocated_frameupdate(::dapi::game::FrameUpdate* value);
  void unsafe_arena_set_allocated_frameupdate(::dapi::game::FrameUpdate* value);
  ::dapi::game::FrameUpdate* unsafe_arena_release_frameupdate();

  private:
  const ::dapi::game::FrameUpdate& _internal_frameupdate() const;
  ::dapi::game::FrameUpdate* _internal_mutable_frameupdate();

  public:
  // .dapi.commands.Command command = 4;
  bool has_command() const;
  private:
  bool _internal_has_command() const;

  public:
  void clear_command() ;
  const ::dapi::commands::Command& command() const;
  PROTOBUF_NODISCARD ::dapi::commands::Command* release_command();
  ::dapi::commands::Command* mutable_command();
  void set_allocated_command(::dapi::commands::Command* value);
  void unsafe_arena_set_allocated_command(::dapi::commands::Command* value);
  ::dapi::commands::Command* unsafe_arena_release_command();

  private:
  const ::dapi::commands::Command& _internal_command() const;
  ::dapi::commands::Command* _internal_mutable_command();

  public:
  // .dapi.message.EndofQueue endOfQueue = 5;
  bool has_endofqueue() const;
  private:
  bool _internal_has_endofqueue() const;

  public:
  void clear_endofqueue() ;
  const ::dapi::message::EndofQueue& endofqueue() const;
  PROTOBUF_NODISCARD ::dapi::message::EndofQueue* release_endofqueue();
  ::dapi::message::EndofQueue* mutable_endofqueue();
  void set_allocated_endofqueue(::dapi::message::EndofQueue* value);
  void unsafe_arena_set_allocated_endofqueue(::dapi::message::EndofQueue* value);
  ::dapi::message::EndofQueue* unsafe_arena_release_endofqueue();

  private:
  const ::dapi::message::EndofQueue& _internal_endofqueue() const;
  ::dapi::message::EndofQueue* _internal_mutable_endofqueue();

  public:
  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:dapi.message.Message)
 private:
  class _Internal;
  void set_has_initbroadcast();
  void set_has_initresponse();
  void set_has_frameupdate();
  void set_has_command();
  void set_has_endofqueue();
  inline bool has_msg() const;
  inline void clear_has_msg();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 5,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Message& from_msg);
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dapi::init::ClientBroadcast* initbroadcast_;
      ::dapi::init::ServerResponse* initresponse_;
      ::dapi::game::FrameUpdate* frameupdate_;
      ::dapi::commands::Command* command_;
      ::dapi::message::EndofQueue* endofqueue_;
    } msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EndofQueue

// -------------------------------------------------------------------

// Message

// .dapi.init.ClientBroadcast initBroadcast = 1;
inline bool Message::has_initbroadcast() const {
  return msg_case() == kInitBroadcast;
}
inline bool Message::_internal_has_initbroadcast() const {
  return msg_case() == kInitBroadcast;
}
inline void Message::set_has_initbroadcast() {
  _impl_._oneof_case_[0] = kInitBroadcast;
}
inline ::dapi::init::ClientBroadcast* Message::release_initbroadcast() {
  // @@protoc_insertion_point(field_release:dapi.message.Message.initBroadcast)
  if (msg_case() == kInitBroadcast) {
    clear_has_msg();
    auto* temp = _impl_.msg_.initbroadcast_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.initbroadcast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dapi::init::ClientBroadcast& Message::_internal_initbroadcast() const {
  return msg_case() == kInitBroadcast ? *_impl_.msg_.initbroadcast_ : reinterpret_cast<::dapi::init::ClientBroadcast&>(::dapi::init::_ClientBroadcast_default_instance_);
}
inline const ::dapi::init::ClientBroadcast& Message::initbroadcast() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dapi.message.Message.initBroadcast)
  return _internal_initbroadcast();
}
inline ::dapi::init::ClientBroadcast* Message::unsafe_arena_release_initbroadcast() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dapi.message.Message.initBroadcast)
  if (msg_case() == kInitBroadcast) {
    clear_has_msg();
    auto* temp = _impl_.msg_.initbroadcast_;
    _impl_.msg_.initbroadcast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_initbroadcast(::dapi::init::ClientBroadcast* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_initbroadcast();
    _impl_.msg_.initbroadcast_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapi.message.Message.initBroadcast)
}
inline ::dapi::init::ClientBroadcast* Message::_internal_mutable_initbroadcast() {
  if (msg_case() != kInitBroadcast) {
    clear_msg();
    set_has_initbroadcast();
    _impl_.msg_.initbroadcast_ =
        ::google::protobuf::MessageLite::DefaultConstruct<::dapi::init::ClientBroadcast>(GetArena());
  }
  return _impl_.msg_.initbroadcast_;
}
inline ::dapi::init::ClientBroadcast* Message::mutable_initbroadcast() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dapi::init::ClientBroadcast* _msg = _internal_mutable_initbroadcast();
  // @@protoc_insertion_point(field_mutable:dapi.message.Message.initBroadcast)
  return _msg;
}

// .dapi.init.ServerResponse initResponse = 2;
inline bool Message::has_initresponse() const {
  return msg_case() == kInitResponse;
}
inline bool Message::_internal_has_initresponse() const {
  return msg_case() == kInitResponse;
}
inline void Message::set_has_initresponse() {
  _impl_._oneof_case_[0] = kInitResponse;
}
inline ::dapi::init::ServerResponse* Message::release_initresponse() {
  // @@protoc_insertion_point(field_release:dapi.message.Message.initResponse)
  if (msg_case() == kInitResponse) {
    clear_has_msg();
    auto* temp = _impl_.msg_.initresponse_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.initresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dapi::init::ServerResponse& Message::_internal_initresponse() const {
  return msg_case() == kInitResponse ? *_impl_.msg_.initresponse_ : reinterpret_cast<::dapi::init::ServerResponse&>(::dapi::init::_ServerResponse_default_instance_);
}
inline const ::dapi::init::ServerResponse& Message::initresponse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dapi.message.Message.initResponse)
  return _internal_initresponse();
}
inline ::dapi::init::ServerResponse* Message::unsafe_arena_release_initresponse() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dapi.message.Message.initResponse)
  if (msg_case() == kInitResponse) {
    clear_has_msg();
    auto* temp = _impl_.msg_.initresponse_;
    _impl_.msg_.initresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_initresponse(::dapi::init::ServerResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_initresponse();
    _impl_.msg_.initresponse_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapi.message.Message.initResponse)
}
inline ::dapi::init::ServerResponse* Message::_internal_mutable_initresponse() {
  if (msg_case() != kInitResponse) {
    clear_msg();
    set_has_initresponse();
    _impl_.msg_.initresponse_ =
        ::google::protobuf::MessageLite::DefaultConstruct<::dapi::init::ServerResponse>(GetArena());
  }
  return _impl_.msg_.initresponse_;
}
inline ::dapi::init::ServerResponse* Message::mutable_initresponse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dapi::init::ServerResponse* _msg = _internal_mutable_initresponse();
  // @@protoc_insertion_point(field_mutable:dapi.message.Message.initResponse)
  return _msg;
}

// .dapi.game.FrameUpdate frameUpdate = 3;
inline bool Message::has_frameupdate() const {
  return msg_case() == kFrameUpdate;
}
inline bool Message::_internal_has_frameupdate() const {
  return msg_case() == kFrameUpdate;
}
inline void Message::set_has_frameupdate() {
  _impl_._oneof_case_[0] = kFrameUpdate;
}
inline ::dapi::game::FrameUpdate* Message::release_frameupdate() {
  // @@protoc_insertion_point(field_release:dapi.message.Message.frameUpdate)
  if (msg_case() == kFrameUpdate) {
    clear_has_msg();
    auto* temp = _impl_.msg_.frameupdate_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.frameupdate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dapi::game::FrameUpdate& Message::_internal_frameupdate() const {
  return msg_case() == kFrameUpdate ? *_impl_.msg_.frameupdate_ : reinterpret_cast<::dapi::game::FrameUpdate&>(::dapi::game::_FrameUpdate_default_instance_);
}
inline const ::dapi::game::FrameUpdate& Message::frameupdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dapi.message.Message.frameUpdate)
  return _internal_frameupdate();
}
inline ::dapi::game::FrameUpdate* Message::unsafe_arena_release_frameupdate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dapi.message.Message.frameUpdate)
  if (msg_case() == kFrameUpdate) {
    clear_has_msg();
    auto* temp = _impl_.msg_.frameupdate_;
    _impl_.msg_.frameupdate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_frameupdate(::dapi::game::FrameUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_frameupdate();
    _impl_.msg_.frameupdate_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapi.message.Message.frameUpdate)
}
inline ::dapi::game::FrameUpdate* Message::_internal_mutable_frameupdate() {
  if (msg_case() != kFrameUpdate) {
    clear_msg();
    set_has_frameupdate();
    _impl_.msg_.frameupdate_ =
        ::google::protobuf::MessageLite::DefaultConstruct<::dapi::game::FrameUpdate>(GetArena());
  }
  return _impl_.msg_.frameupdate_;
}
inline ::dapi::game::FrameUpdate* Message::mutable_frameupdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dapi::game::FrameUpdate* _msg = _internal_mutable_frameupdate();
  // @@protoc_insertion_point(field_mutable:dapi.message.Message.frameUpdate)
  return _msg;
}

// .dapi.commands.Command command = 4;
inline bool Message::has_command() const {
  return msg_case() == kCommand;
}
inline bool Message::_internal_has_command() const {
  return msg_case() == kCommand;
}
inline void Message::set_has_command() {
  _impl_._oneof_case_[0] = kCommand;
}
inline ::dapi::commands::Command* Message::release_command() {
  // @@protoc_insertion_point(field_release:dapi.message.Message.command)
  if (msg_case() == kCommand) {
    clear_has_msg();
    auto* temp = _impl_.msg_.command_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.command_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dapi::commands::Command& Message::_internal_command() const {
  return msg_case() == kCommand ? *_impl_.msg_.command_ : reinterpret_cast<::dapi::commands::Command&>(::dapi::commands::_Command_default_instance_);
}
inline const ::dapi::commands::Command& Message::command() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dapi.message.Message.command)
  return _internal_command();
}
inline ::dapi::commands::Command* Message::unsafe_arena_release_command() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dapi.message.Message.command)
  if (msg_case() == kCommand) {
    clear_has_msg();
    auto* temp = _impl_.msg_.command_;
    _impl_.msg_.command_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_command(::dapi::commands::Command* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_command();
    _impl_.msg_.command_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapi.message.Message.command)
}
inline ::dapi::commands::Command* Message::_internal_mutable_command() {
  if (msg_case() != kCommand) {
    clear_msg();
    set_has_command();
    _impl_.msg_.command_ =
        ::google::protobuf::MessageLite::DefaultConstruct<::dapi::commands::Command>(GetArena());
  }
  return _impl_.msg_.command_;
}
inline ::dapi::commands::Command* Message::mutable_command() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dapi::commands::Command* _msg = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:dapi.message.Message.command)
  return _msg;
}

// .dapi.message.EndofQueue endOfQueue = 5;
inline bool Message::has_endofqueue() const {
  return msg_case() == kEndOfQueue;
}
inline bool Message::_internal_has_endofqueue() const {
  return msg_case() == kEndOfQueue;
}
inline void Message::set_has_endofqueue() {
  _impl_._oneof_case_[0] = kEndOfQueue;
}
inline void Message::clear_endofqueue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kEndOfQueue) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.endofqueue_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      if (_impl_.msg_.endofqueue_ != nullptr) {
        _impl_.msg_.endofqueue_->Clear();
      }
    }
    clear_has_msg();
  }
}
inline ::dapi::message::EndofQueue* Message::release_endofqueue() {
  // @@protoc_insertion_point(field_release:dapi.message.Message.endOfQueue)
  if (msg_case() == kEndOfQueue) {
    clear_has_msg();
    auto* temp = _impl_.msg_.endofqueue_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.endofqueue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dapi::message::EndofQueue& Message::_internal_endofqueue() const {
  return msg_case() == kEndOfQueue ? *_impl_.msg_.endofqueue_ : reinterpret_cast<::dapi::message::EndofQueue&>(::dapi::message::_EndofQueue_default_instance_);
}
inline const ::dapi::message::EndofQueue& Message::endofqueue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dapi.message.Message.endOfQueue)
  return _internal_endofqueue();
}
inline ::dapi::message::EndofQueue* Message::unsafe_arena_release_endofqueue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dapi.message.Message.endOfQueue)
  if (msg_case() == kEndOfQueue) {
    clear_has_msg();
    auto* temp = _impl_.msg_.endofqueue_;
    _impl_.msg_.endofqueue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Message::unsafe_arena_set_allocated_endofqueue(::dapi::message::EndofQueue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_endofqueue();
    _impl_.msg_.endofqueue_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dapi.message.Message.endOfQueue)
}
inline ::dapi::message::EndofQueue* Message::_internal_mutable_endofqueue() {
  if (msg_case() != kEndOfQueue) {
    clear_msg();
    set_has_endofqueue();
    _impl_.msg_.endofqueue_ =
        ::google::protobuf::MessageLite::DefaultConstruct<::dapi::message::EndofQueue>(GetArena());
  }
  return _impl_.msg_.endofqueue_;
}
inline ::dapi::message::EndofQueue* Message::mutable_endofqueue() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dapi::message::EndofQueue* _msg = _internal_mutable_endofqueue();
  // @@protoc_insertion_point(field_mutable:dapi.message.Message.endOfQueue)
  return _msg;
}

inline bool Message::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void Message::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline Message::MsgCase Message::msg_case() const {
  return Message::MsgCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace dapi


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // message_2eproto_2epb_2eh
